AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a Spring Boot application to AWS Lambda and connect it to API Gateway.

Resources:
  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  # Lambda Function
  SchoolMgmtLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: SchoolMgmtLambda
      Handler: com.wg.StreamLambdaHandler::handleRequest
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: schoolmgmtawsbucket # Replace with your bucket name
        S3Key: SchoolMgmtAWS-1.0-SNAPSHOT-lambda-package.zip       # Replace with your uploaded ZIP file
      Runtime: java21
      MemorySize: 512
      Timeout: 30

  # API Gateway REST API
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: SchoolMgmtApi

  # API Gateway Resource
  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: spring-boot
      RestApiId: !Ref ApiGatewayRestApi

  # API Gateway Method
  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ResourceId: !Ref ApiGatewayResource
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: ANY
        Uri: !Sub
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SchoolMgmtLambdaFunction.Arn}/invocations

  # API Gateway Deployment
  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      StageName: test
    DependsOn:
      - ApiGatewayMethod

  # Lambda Permission for API Gateway
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SchoolMgmtLambdaFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*

Outputs:
  ApiUrl:
    Description: The URL of the API Gateway endpoint
    Value: !Sub
      https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/test/spring-boot
